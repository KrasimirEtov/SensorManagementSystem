@model CreateUpdateUserSensorViewModel

@{
	string descriptionSize = Model.IsSwitch ? "col-md-9" : "col-md-3";
}
<form asp-area="" asp-controller="UserSensor" asp-action="Create" method="post">
	<input asp-for="SensorId" hidden value="@Model.SensorId" />
	<input asp-for="UserId" hidden value="@Model.UserId" />
	<input asp-for="MeasureType" hidden value="@Model.MeasureType" />
	<input asp-for="MeasureUnit" hidden value="@Model.MeasureUnit" />

	<div class="row">
		<div class="col-md-5">
			<label>Sensor Name</label>
			<div class="input-group mb-3 form-group">
				<div class="input-group-prepend">
					<span class="input-group-text"><i class="fas fa-envelope"></i></span>
				</div>
				<input type="text" asp-for="Name" class="form-control" placeholder="Enter sensor name...">
			</div>
		</div>

		<div class="col-md-5">
			<label>Sensor Measure Type - Measure Unit</label>
			<div class="input-group mb-3 form-group">
				<div class="input-group-prepend">
					<span class="input-group-text"><i class="fas fa-envelope"></i></span>
				</div>
				<input type="text" class="form-control" value="@Model.MeasureType - @Model.MeasureUnit" disabled>
			</div>
		</div>
		<div class="col-md-1">
			<label>Public</label>
			<input asp-for="IsPublic" type="checkbox" name="my-checkbox" checked data-bootstrap-switch data-off-color="danger" data-on-color="success">
		</div>
		@if (!Model.IsSwitch)
		{
			<div class="col-md-1">
				<label>Alarm</label>
				<input asp-for="IsAlarmOn.Value" type="checkbox" name="my-checkbox" checked data-bootstrap-switch data-off-color="danger" data-on-color="success">
			</div>
		}
	</div>

	<div class="row">
		<div class="@descriptionSize">
			<div class="form-group">
				<label>Sensor Description</label>
				<textarea asp-for="Description" class="form-control" rows="3" placeholder="Enter description..."></textarea>
			</div>
		</div>
		<div class="col-md-3">
			<div class="form-group">
				<label>Sensor Polling Interval</label>
				<input asp-for="CustomPollingInterval" class="form-control"
					   min="@Model.SensorPollingInterval"
					   value="@Model.SensorPollingInterval"
					   data-val-range="Refresh rate must be at least @Model.CustomPollingInterval"
					   data-val-number="Refresh rate must be a number." />
			</div>
		</div>
		@if (!Model.IsSwitch)
		{
			<div class="col-md-3">
				<div class="form-group">
					<label>Sensor Min Range</label>
					<input asp-for="CustomMinRangeValue" class="form-control"  type="text" name="Min Range Slider" value="">
				</div>
			</div>
			<div class="col-md-3">
				<div class="form-group">
					<label>Sensor Max Range</label>
					<input asp-for="CustomMaxRangeValue" class="form-control" type="text" name="Max Range Slider" value="">
				</div>
			</div>
		}
	</div>
	<hr />
	@*Google Maps*@
	<div class="col-md-12">
		<div class="card card-primary card-outline collapsed-card">
			<div class="card-header">
				<h3 class="card-title">Choose sensor coordinates</h3>

				<div class="card-tools">
					<button type="button" class="btn btn-tool" data-card-widget="maximize"><i class="fas fa-expand"></i></button>
					<button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-plus"></i></button>
				</div>
				<!-- /.card-tools -->
			</div>
			<!-- /.card-header -->
			<div class="card-body">
				google maps will appear here
			</div>
			<!-- /.card-body -->
		</div>
		<!-- /.card -->
	</div>
</form>
<script>
	$().ready(function () {
		$("input[data-bootstrap-switch]").each(function () {
			$(this).bootstrapSwitch('state', $(this).prop('checked'));
		});

		$('#CustomMinRangeValue').ionRangeSlider({
			min: @Model.SensorMinRangeValue.Value,
			max: @Model.SensorMaxRangeValue.Value,
			type: 'single',
			step: 0.5,
			postfix: ' sec',
			prettify: true,
			hasGrid: true
		});

		$('#CustomMaxRangeValue').ionRangeSlider({
			min: @Model.SensorMinRangeValue.Value,
			max: @Model.SensorMaxRangeValue.Value,
			type: 'single',
			step: 0.5,
			postfix: ' sec',
			prettify: true,
			hasGrid: true,
			onChange: function (obj) {
				$("#CustomMaxRangeValue").val(obj.from);
				console.log(obj.from);
				console.log("djoni = " + $("#CustomMaxRangeValue").val());
			}
		});
	});
</script>